name: Pelican
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
  Build-Pelican-Site:
    runs-on: ubuntu-latest
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"
      - name: Configure local
        run: |
          sudo locale-gen en_GB
          sudo update-locale
          locale -a
          sudo apt install gettext
      - name: Install pelican files
        run: |
          python -m pip install "pelican[markdown]"==4.6.0
          python -m pip install webassets
          pip install Jinja2==3.0.*
          # python -m pip install --upgrade jinja2
          python -m pip install ghp-import==0.2.2 
          python -m pip install git+https://github.com/StevenMaude/pelican-i18n_subsites
#      - name: Clone theme into activetheme
#        run: |
#          git clone --recursive https://github.com/frankV/twenty-pelican-html5up.git active-theme
      - name: Clone pelican-plugins
        run: |
          git clone --recursive https://github.com/getpelican/pelican-plugins
      - name: Build site
        run: |
          pelican -v content -o output -s pelicanconf.py
#      - name: Fix CNAME
#        run: |
#          cp CNAME output/.
      - name: Copy output dir contents to gh-pages
        uses: s0/git-publish-subdir-action@develop
        env:
          REPO: self
          BRANCH: gh-pages # The branch name where you want to push the output
          FOLDER: output # The directory where output is generated
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # GitHub will automatically add this - you don't need to bother getting a token
#          CNAME: www.4m-association.org
          MESSAGE: "Build: ({sha}) {msg}" # The commit message
      - run: echo "üçè This job's status is ${{ job.status }}."